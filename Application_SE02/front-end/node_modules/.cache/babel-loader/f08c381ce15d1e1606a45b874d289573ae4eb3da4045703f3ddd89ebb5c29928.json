{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fanta\\\\Documents\\\\SFSU\\\\Semester 4 (Spring 2023)\\\\CSC648\\\\Project\\\\csc648-spring23-04-team02\\\\Application_SE02\\\\front-end\\\\src\\\\login.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass LoginForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      InfoErrors: {}\n    };\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n    this.handleSubmit = event => {\n      event.preventDefault();\n      if (this.SignupValidation()) {\n        console.log(this.state.username);\n        console.log(this.state.password);\n        const userInfo = {\n          username: this.state.username,\n          password: this.state.password\n        };\n        const userPost = {\n          method: \"POST\",\n          body: JSON.stringify(userInfo)\n        };\n        fetch(\"api/login\", userPost).then(res => res.json()).catch(event => console.log(event));\n      }\n    };\n    this.SignupValidation = () => {\n      let InfoErrors = {};\n      let ValidCredentials = true;\n      if (!this.state.username.match(/^[A-Za-z][A-Za-z0-9]+$/)) {\n        ValidCredentials = false;\n        InfoErrors[\"username\"] = \"Username must begin with an alphanumeric character.\";\n      } else {\n        if (!this.state.username.match(/^[A-Za-z]\\w{2,20}$/)) {\n          ValidCredentials = false;\n          InfoErrors[\"username\"] = \"Username must contain at least 3 alphanumeric characters.\";\n        }\n      }\n      if (!this.state.password) {\n        ValidCredentials = false;\n        InfoErrors[\"password\"] = \"Please enter a valid password.\";\n      } else if (this.state.password) {\n        if (!this.state.password.match(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$/)) {\n          ValidCredentials = false;\n          InfoErrors[\"password\"] = \"Password must be at least 8 characters and contain 1 letter, 1 number and a symbol.\";\n        }\n      }\n      this.setState({\n        InfoErrors\n      });\n      return ValidCredentials;\n    };\n  }\n  render() {\n    const {\n      username,\n      password\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Login_Main_Div\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        name: \"Login_Form\",\n        onSubmit: this.handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Login_Container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Login_Container_Border\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"Login_Username\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"LoginRegisterInputFields\",\n              type: \"text\",\n              id: \"username\",\n              placeholder: \"Username\",\n              name: \"username\",\n              value: username,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ErrorMessage\",\n              children: this.state.InfoErrors.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"Login_Password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"LoginRegisterInputFields\",\n              type: \"password\",\n              id: \"password\",\n              placeholder: \"Password\",\n              name: \"password\",\n              value: password,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ErrorMessage\",\n              children: this.state.InfoErrors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"Forgot_Password\",\n              href: \"/\",\n              children: \"Forgot Password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              className: \"Login_Button\",\n              value: \"Log In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default LoginForm;","map":{"version":3,"names":["React","Component","LoginForm","state","username","password","InfoErrors","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","SignupValidation","console","log","userInfo","userPost","method","body","JSON","stringify","fetch","then","res","json","catch","ValidCredentials","match","render"],"sources":["C:/Users/fanta/Documents/SFSU/Semester 4 (Spring 2023)/CSC648/Project/csc648-spring23-04-team02/Application_SE02/front-end/src/login.js"],"sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass LoginForm extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    InfoErrors: {},\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (this.SignupValidation()) {\r\n      console.log(this.state.username);\r\n      console.log(this.state.password);\r\n\r\n      const userInfo = {\r\n        username: this.state.username,\r\n        password: this.state.password,\r\n      };\r\n\r\n      const userPost = {\r\n        method: \"POST\",\r\n        body: JSON.stringify(userInfo),\r\n      };\r\n\r\n      fetch(\"api/login\", userPost)\r\n        .then((res) => res.json())\r\n        .catch((event) => console.log(event));\r\n    }\r\n  };\r\n\r\n  SignupValidation = () => {\r\n    let InfoErrors = {};\r\n    let ValidCredentials = true;\r\n\r\n    if (!this.state.username.match(/^[A-Za-z][A-Za-z0-9]+$/)) {\r\n      ValidCredentials = false;\r\n      InfoErrors[\"username\"] =\r\n        \"Username must begin with an alphanumeric character.\";\r\n    } else {\r\n      if (!this.state.username.match(/^[A-Za-z]\\w{2,20}$/)) {\r\n        ValidCredentials = false;\r\n        InfoErrors[\"username\"] =\r\n          \"Username must contain at least 3 alphanumeric characters.\";\r\n      }\r\n    }\r\n\r\n    if (!this.state.password) {\r\n      ValidCredentials = false;\r\n      InfoErrors[\"password\"] = \"Please enter a valid password.\";\r\n    } else if (this.state.password) {\r\n      if (\r\n        !this.state.password.match(\r\n          /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$/\r\n        )\r\n      ) {\r\n        ValidCredentials = false;\r\n        InfoErrors[\"password\"] =\r\n          \"Password must be at least 8 characters and contain 1 letter, 1 number and a symbol.\";\r\n      }\r\n    }\r\n\r\n    this.setState({ InfoErrors });\r\n    return ValidCredentials;\r\n  };\r\n\r\n  render() {\r\n    const { username, password } = this.state;\r\n\r\n    return (\r\n      <div className=\"Login_Main_Div\">\r\n        <form name=\"Login_Form\" onSubmit={this.handleSubmit}>\r\n          <div className=\"Login_Container\">\r\n            <div className=\"Login_Container_Border\">\r\n              <label className=\"Login_Username\">Username</label>\r\n              <input\r\n                className=\"LoginRegisterInputFields\"\r\n                type=\"text\"\r\n                id=\"username\"\r\n                placeholder=\"Username\"\r\n                name=\"username\"\r\n                value={username}\r\n                onChange={this.handleChange}\r\n              />\r\n              <div className=\"ErrorMessage\">\r\n                {this.state.InfoErrors.username}\r\n              </div>\r\n              <br />\r\n\r\n              <label className=\"Login_Password\">Password</label>\r\n              <input\r\n                className=\"LoginRegisterInputFields\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                value={password}\r\n                onChange={this.handleChange}\r\n              />\r\n              <div className=\"ErrorMessage\">\r\n                {this.state.InfoErrors.password}\r\n              </div>\r\n              <br />\r\n              {\r\n                <a className=\"Forgot_Password\" href=\"/\">\r\n                  Forgot Password?\r\n                </a>\r\n              }\r\n              <br />\r\n              <input type=\"submit\" className=\"Login_Button\" value=\"Log In\" />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}