{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fanta\\\\Documents\\\\SFSU\\\\Semester 4 (Spring 2023)\\\\CSC648\\\\Project\\\\csc648-spring23-04-team02\\\\Application_SE02\\\\front-end\\\\src\\\\Login.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass LoginForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      username: '',\n      password: '',\n      InfoErrors: {}\n    };\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n    this.handleSubmit = event => {\n      event.preventDefault();\n      if (this.SignupValidation()) {\n        console.log(this.state.username);\n        console.log(this.state.password);\n        const userInfo = {\n          username: this.state.username,\n          password: this.state.password\n        };\n        const userPost = {\n          method: 'POST',\n          body: JSON.stringify(userInfo)\n        };\n        fetch('/login', userPost).then(res => res.json()).catch(event => console.log(event));\n      }\n      ;\n    };\n    this.SignupValidation = () => {\n      let InfoErrors = {};\n      let ValidCredentials = true;\n      if (!this.state.username.match(/^[A-Za-z][A-Za-z0-9]+$/)) {\n        ValidCredentials = false;\n        InfoErrors['username'] = 'Username must begin with an alphanumeric character.';\n      } else {\n        if (!this.state.username.match(/^[A-Za-z]\\w{2,20}$/)) {\n          ValidCredentials = false;\n          InfoErrors['username'] = 'Username must contain at least 3 alphanumeric characters.';\n        }\n      }\n      if (!this.state.password) {\n        ValidCredentials = false;\n        InfoErrors['password'] = 'Please enter a valid password.';\n      } else if (this.state.password) {\n        if (!this.state.password.match(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$/)) {\n          ValidCredentials = false;\n          InfoErrors['password'] = 'Password must be at least 8 characters and contain 1 letter, 1 number and a symbol.';\n        }\n      }\n      this.setState({\n        InfoErrors\n      });\n      return ValidCredentials;\n    };\n  }\n  render() {\n    const {\n      username,\n      password\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Login_Main_Div\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        name: \"Login_Form\",\n        onSubmit: this.handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Login_Container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Login_Container_Border\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"Login_Username\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"LoginRegisterInputFields\",\n              type: \"text\",\n              id: \"username\",\n              placeholder: \"Username\",\n              name: \"username\",\n              value: username,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ErrorMessage\",\n              children: this.state.InfoErrors.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"Login_Password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"LoginRegisterInputFields\",\n              type: \"password\",\n              id: \"password\",\n              placeholder: \"Password\",\n              name: \"password\",\n              value: password,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ErrorMessage\",\n              children: this.state.InfoErrors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"Forgot_Password\",\n              href: \"/\",\n              children: \"Forgot Password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              className: \"Login_Button\",\n              value: \"Log In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this);\n  }\n}\nexport default LoginForm;","map":{"version":3,"names":["React","Component","LoginForm","state","username","password","InfoErrors","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","SignupValidation","console","log","userInfo","userPost","method","body","JSON","stringify","fetch","then","res","json","catch","ValidCredentials","match","render"],"sources":["C:/Users/fanta/Documents/SFSU/Semester 4 (Spring 2023)/CSC648/Project/csc648-spring23-04-team02/Application_SE02/front-end/src/Login.js"],"sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass LoginForm extends Component {\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        InfoErrors: {},\r\n      }\r\n      \r\n      handleChange = (event) => {\r\n        this.setState({\r\n          [event.target.name]: event.target.value\r\n        })\r\n        \r\n      }\r\n      \r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (this.SignupValidation()) {\r\n            console.log(this.state.username);\r\n            console.log(this.state.password); \r\n\r\n\r\n            const userInfo = {\r\n                username: this.state.username,\r\n                password: this.state.password,\r\n               };\r\n\r\n            const userPost = {\r\n                method: 'POST',\r\n                body: JSON.stringify(userInfo),\r\n              };\r\n\r\n              fetch('/login', userPost)\r\n              .then(res => res.json())\r\n              .catch(event => console.log(event));\r\n          };\r\n        }\r\n    \r\n\r\n\r\n    SignupValidation = () => {\r\n        let InfoErrors = {};\r\n        let ValidCredentials = true;\r\n\r\n        if (!this.state.username.match(/^[A-Za-z][A-Za-z0-9]+$/)) {\r\n            ValidCredentials = false\r\n            InfoErrors['username'] = 'Username must begin with an alphanumeric character.'\r\n        } else {\r\n            if (!this.state.username.match(/^[A-Za-z]\\w{2,20}$/)) {\r\n                ValidCredentials = false\r\n                InfoErrors['username'] = 'Username must contain at least 3 alphanumeric characters.'\r\n            }\r\n        }\r\n        \r\n        if (!this.state.password) {\r\n            ValidCredentials = false\r\n            InfoErrors['password'] = 'Please enter a valid password.'\r\n          } else if (this.state.password) {\r\n            if (!this.state.password.match(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$/)) {\r\n              ValidCredentials = false\r\n              InfoErrors['password'] = 'Password must be at least 8 characters and contain 1 letter, 1 number and a symbol.'\r\n            }\r\n          }\r\n      \r\n          this.setState({ InfoErrors });\r\n          return ValidCredentials;\r\n        };\r\n\r\nrender() {\r\n\r\n    const { username, password } = this.state;\r\n\r\n    return (\r\n        <div className=\"Login_Main_Div\">\r\n            <form name=\"Login_Form\" onSubmit = {this.handleSubmit} >\r\n                <div className=\"Login_Container\">\r\n                    <div className=\"Login_Container_Border\">\r\n                        <label className=\"Login_Username\">Username</label> \r\n                        <input className=\"LoginRegisterInputFields\" type=\"text\" id=\"username\" placeholder=\"Username\" \r\n                        name='username'\r\n                        value={username}\r\n                        onChange = {this.handleChange}\r\n                        />\r\n                        <div className=\"ErrorMessage\">{this.state.InfoErrors.username}</div>\r\n                        <br/>\r\n                    \r\n                        <label className=\"Login_Password\">Password</label>\r\n                        <input className=\"LoginRegisterInputFields\" type=\"password\" id=\"password\" placeholder=\"Password\" \r\n                        name='password'\r\n                        value={password}\r\n                        onChange = {this.handleChange}\r\n                        />\r\n                        <div className=\"ErrorMessage\">{this.state.InfoErrors.password}</div>\r\n                        <br/>\r\n\r\n                        <a className=\"Forgot_Password\" href=\"/\">Forgot Password?</a>\r\n                        <br/>\r\n                        <input type=\"submit\" className=\"Login_Button\" value=\"Log In\"/> \r\n                    </div>\r\n                </div> \r\n            </form>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default LoginForm;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}