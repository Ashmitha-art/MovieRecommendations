[{"/Users/jpl-st-spring2021/PycharmProjects/dev_chris/Application_SE02/front-end/src/index.js":"1","/Users/jpl-st-spring2021/PycharmProjects/dev_chris/Application_SE02/front-end/src/App.js":"2","/Users/jpl-st-spring2021/PycharmProjects/dev_chris/Application_SE02/front-end/src/about.js":"3","/Users/jpl-st-spring2021/PycharmProjects/dev_chris/Application_SE02/front-end/src/navbar.js":"4","/Users/jpl-st-spring2021/PycharmProjects/dev_chris/Application_SE02/front-end/src/home.js":"5","/Users/jpl-st-spring2021/PycharmProjects/dev_chris/Application_SE02/front-end/src/member.js":"6","/Users/jpl-st-spring2021/PycharmProjects/dev_chris/Application_SE02/front-end/src/login.js":"7","/Users/jpl-st-spring2021/PycharmProjects/dev_chris/Application_SE02/front-end/src/signup.js":"8","/Users/jpl-st-spring2021/PycharmProjects/dev_chris/Application_SE02/front-end/src/my-list.js":"9","/Users/jpl-st-spring2021/PycharmProjects/dev_chris/Application_SE02/front-end/src/recommend.js":"10","/Users/jpl-st-spring2021/PycharmProjects/dev_chris/Application_SE02/front-end/src/select_genre.js":"11","/Users/jpl-st-spring2021/PycharmProjects/dev_chris/Application_SE02/front-end/src/select_year.js":"12","/Users/jpl-st-spring2021/PycharmProjects/dev_chris/Application_SE02/front-end/src/select_runtime.js":"13","/Users/jpl-st-spring2021/PycharmProjects/dev_chris/Application_SE02/front-end/src/select_age.js":"14","/Users/jpl-st-spring2021/PycharmProjects/dev_chris/Application_SE02/front-end/src/results.js":"15"},{"size":254,"mtime":1681927639688,"results":"16","hashOfConfig":"17"},{"size":1687,"mtime":1681929728255,"results":"18","hashOfConfig":"17"},{"size":4415,"mtime":1681927639686,"results":"19","hashOfConfig":"17"},{"size":1820,"mtime":1681927639687,"results":"20","hashOfConfig":"17"},{"size":467,"mtime":1681927639687,"results":"21","hashOfConfig":"17"},{"size":3785,"mtime":1681927639687,"results":"22","hashOfConfig":"17"},{"size":3757,"mtime":1681933237161,"results":"23","hashOfConfig":"17"},{"size":5730,"mtime":1681932970653,"results":"24","hashOfConfig":"17"},{"size":2749,"mtime":1681927639688,"results":"25","hashOfConfig":"17"},{"size":2911,"mtime":1681927639688,"results":"26","hashOfConfig":"17"},{"size":2314,"mtime":1681927639689,"results":"27","hashOfConfig":"17"},{"size":2140,"mtime":1681927639689,"results":"28","hashOfConfig":"17"},{"size":2267,"mtime":1681927639689,"results":"29","hashOfConfig":"17"},{"size":2640,"mtime":1681927639688,"results":"30","hashOfConfig":"17"},{"size":937,"mtime":1681927639688,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ic44qw",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jpl-st-spring2021/PycharmProjects/dev_chris/Application_SE02/front-end/src/index.js",[],[],"/Users/jpl-st-spring2021/PycharmProjects/dev_chris/Application_SE02/front-end/src/App.js",[],[],"/Users/jpl-st-spring2021/PycharmProjects/dev_chris/Application_SE02/front-end/src/about.js",[],[],"/Users/jpl-st-spring2021/PycharmProjects/dev_chris/Application_SE02/front-end/src/navbar.js",[],[],"/Users/jpl-st-spring2021/PycharmProjects/dev_chris/Application_SE02/front-end/src/home.js",[],[],"/Users/jpl-st-spring2021/PycharmProjects/dev_chris/Application_SE02/front-end/src/member.js",[],[],"/Users/jpl-st-spring2021/PycharmProjects/dev_chris/Application_SE02/front-end/src/login.js",[],[],"/Users/jpl-st-spring2021/PycharmProjects/dev_chris/Application_SE02/front-end/src/signup.js",[],[],"/Users/jpl-st-spring2021/PycharmProjects/dev_chris/Application_SE02/front-end/src/my-list.js",[],[],"/Users/jpl-st-spring2021/PycharmProjects/dev_chris/Application_SE02/front-end/src/recommend.js",["82","83","84","85"],[],"import { useState } from \"react\";\nimport SelectGenre from \"./select_genre\";\nimport SelectYear from \"./select_year\";\nimport SelectRuntime from \"./select_runtime\";\nimport SelectAge from \"./select_age\";\nimport Results from \"./results\";\n\nfunction SelectionSequence() {\n  const [current, set_current] = useState(\"genre\");\n\n  const [genre, set_genre] = useState([]);\n  const [year, set_year] = useState([]);\n  const [runtime, set_runtime] = useState([]);\n  const [age, set_age] = useState([]);\n\n  const [results, set_results] = useState([]);\n  const [error, set_error] = useState(\"\");\n\n  const generate_results = () => {\n    const preferences = { genre, year, runtime, age };\n    console.log(preferences);\n\n    fetch(\"api/get_movie_recommendations/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${localStorage.getItem(\"token\")}`,\n      },\n      body: JSON.stringify(preferences),\n    })\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        set_results(data);\n      })\n      .catch((err) => {\n        console.log(err.message);\n        set_error(err);\n      });\n    set_current(\"results\");\n  };\n\n  return (\n    <div>\n      {/* Selection Pages */}\n      {current === \"genre\" && (\n        <SelectGenre element={genre} set_element={set_genre} />\n      )}\n      {current === \"year\" && (\n        <SelectYear element={year} set_element={set_year} />\n      )}\n      {current === \"runtime\" && (\n        <SelectRuntime element={runtime} set_element={set_runtime} />\n      )}\n      {current === \"age\" && <SelectAge element={age} set_element={set_age} />}\n\n      {current === \"results\" && <Results data={results} error={error} />}\n\n      {/* Next Buttons */}\n      {genre.length != 0 && current === \"genre\" && (\n        <button\n          className=\"next-button\"\n          onClick={() => {\n            set_current(\"year\");\n          }}\n        >\n          Next\n        </button>\n      )}\n      {year.length != 0 && current === \"year\" && (\n        <button\n          className=\"next-button\"\n          onClick={() => {\n            set_current(\"runtime\");\n          }}\n        >\n          Next\n        </button>\n      )}\n      {runtime.length != 0 && current === \"runtime\" && (\n        <button\n          className=\"next-button\"\n          onClick={() => {\n            set_current(\"age\");\n          }}\n        >\n          Next\n        </button>\n      )}\n      {age.length != 0 && current === \"age\" && (\n        <button\n          className=\"next-button\"\n          onClick={() => {\n            generate_results();\n          }}\n        >\n          Generate Recommendations\n        </button>\n      )}\n\n      {/* Testing... */}\n\n      <p className=\"test\">{genre}</p>\n      <p className=\"test\">{year}</p>\n      <p className=\"test\">{runtime}</p>\n      <p className=\"test\">{age}</p>\n    </div>\n  );\n}\n\nexport default SelectionSequence;\n","/Users/jpl-st-spring2021/PycharmProjects/dev_chris/Application_SE02/front-end/src/select_genre.js",["86"],[],"import { useState } from \"react\";\n\nfunction SelectGenre({ element, set_element }) {\n  const genre_limit = 3;\n  const [genre_num, set_genre_num] = useState(0);\n  const [genres, set_genres] = useState([\n    {\n      genre: \"Action\",\n      state: false,\n    },\n    {\n      genre: \"Adventure\",\n      state: false,\n    },\n    {\n      genre: \"Comedy\",\n      state: false,\n    },\n    {\n      genre: \"Drama\",\n      state: false,\n    },\n    {\n      genre: \"Horror\",\n      state: false,\n    },\n    {\n      genre: \"Thriller\",\n      state: false,\n    },\n    {\n      genre: \"Mystery\",\n      state: false,\n    },\n    {\n      genre: \"Crime\",\n      state: false,\n    },\n    {\n      genre: \"Animation\",\n      state: false,\n    },\n    {\n      genre: \"Sci-Fi\",\n      state: false,\n    },\n    {\n      genre: \"Fantasy\",\n      state: false,\n    },\n    {\n      genre: \"Romance\",\n      state: false,\n    },\n  ]);\n\n  function handle_click(genre) {\n    function remove_genre(x) {\n      set_element(\n        element.filter((genre) => {\n          return genre != x;\n        })\n      );\n      set_genre_num(genre_num - 1);\n    }\n\n    function add_genre(x) {\n      set_element((element) => [...element, x]);\n      set_genre_num(genre_num + 1);\n    }\n\n    const new_genres = genres.map((x) => {\n      if (x.genre === genre) {\n        if (x.state) {\n          remove_genre(genre);\n          return { ...x, state: false };\n        } else {\n          if (genre_num < genre_limit) {\n            add_genre(genre);\n            return { ...x, state: true };\n          }\n          return x;\n        }\n      } else {\n        return x;\n      }\n    });\n\n    set_genres(new_genres);\n  }\n\n  return (\n    <div>\n      <h2 className=\"heading\">1: Select a Genre (Up to {genre_limit})</h2>\n      <div className=\"genre-button-container\">\n        {genres.map((element, index) => (\n          <label\n            key={index}\n            className={`genre-button-${element.state ? \"on\" : \"off\"}`}\n          >\n            <input\n              className=\"genre-button-checkbox\"\n              type=\"checkbox\"\n              onClick={() => {\n                handle_click(element.genre);\n              }}\n            />\n            <p className=\"genre-button-text\">{element.genre}</p>\n          </label>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default SelectGenre;\n","/Users/jpl-st-spring2021/PycharmProjects/dev_chris/Application_SE02/front-end/src/select_year.js",["87"],[],"import { useState } from \"react\";\n\nfunction SelectYear({ element, set_element }) {\n  const year_limit = 2;\n  const [year_num, set_year_num] = useState(0);\n  const [years, set_years] = useState([\n    {\n      year: \"Prehistoric\",\n      desc: \"1920 to 1940\",\n      state: false,\n    },\n    {\n      year: \"Vintage\",\n      desc: \"1940 to 1960\",\n      state: false,\n    },\n    {\n      year: \"Classic\",\n      desc: \"1960 to 1980\",\n      state: false,\n    },\n    {\n      year: \"Retro\",\n      desc: \"1980 to 2000\",\n      state: false,\n    },\n    {\n      year: \"Recent\",\n      desc: \"2000 to 2020\",\n      state: false,\n    },\n  ]);\n\n  function handle_click(year) {\n    function remove_year(x) {\n      set_element(\n        element.filter((year) => {\n          return year != x;\n        })\n      );\n      set_year_num(year_num - 1);\n    }\n\n    function add_year(x) {\n      set_element((element) => [...element, x]);\n      set_year_num(year_num + 1);\n    }\n\n    const new_years = years.map((x) => {\n      if (x.desc === year) {\n        if (x.state) {\n          remove_year(year);\n          return { ...x, state: false };\n        } else {\n          if (year_num < year_limit) {\n            add_year(year);\n            return { ...x, state: true };\n          }\n          return x;\n        }\n      } else {\n        return x;\n      }\n    });\n\n    set_years(new_years);\n  }\n\n  return (\n    <div>\n      <h2 className=\"heading\">2: Select a Year Range (Up to {year_limit})</h2>\n      <div className=\"year-button-container\">\n        {years.map((element, index) => (\n          <label\n            key={index}\n            className={`year-button-${element.state ? \"on\" : \"off\"}`}\n          >\n            <input\n              className=\"year-button-checkbox\"\n              type=\"checkbox\"\n              onClick={() => {\n                handle_click(element.desc);\n              }}\n            />\n            <p className=\"year-button-text\">\n              {element.year}\n              <br />\n            </p>\n            <p className=\"year-button-desc-text\">{element.desc}</p>\n          </label>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default SelectYear;\n","/Users/jpl-st-spring2021/PycharmProjects/dev_chris/Application_SE02/front-end/src/select_runtime.js",["88"],[],"import { useState } from \"react\";\n\nfunction SelectRuntime({ element, set_element }) {\n  const runtime_limit = 2;\n  const [runtime_num, set_runtime_num] = useState(0);\n  const [runtimes, set_runtimes] = useState([\n    {\n      runtime: \"Short\",\n      desc: \"Under 90\",\n      state: false,\n    },\n    {\n      runtime: \"Reasonable\",\n      desc: \"90 to 120\",\n      state: false,\n    },\n    {\n      runtime: \"Long\",\n      desc: \"120 to 150\",\n      state: false,\n    },\n    {\n      runtime: \"Epic\",\n      desc: \"150 to 180\",\n      state: false,\n    },\n    {\n      runtime: \"Eternity\",\n      desc: \"Over 180\",\n      state: false,\n    },\n  ]);\n\n  function handle_click(runtime) {\n    function add_runtime(x) {\n      set_element((element) => [...element, x]);\n      set_runtime_num(runtime_num + 1);\n    }\n\n    function remove_runtime(x) {\n      set_element(\n        element.filter((runtime) => {\n          return runtime != x;\n        })\n      );\n      set_runtime_num(runtime_num - 1);\n    }\n\n    const new_runtimes = runtimes.map((x) => {\n      if (x.desc === runtime) {\n        if (x.state) {\n          remove_runtime(runtime);\n          return { ...x, state: false };\n        } else {\n          if (runtime_num < runtime_limit) {\n            add_runtime(runtime);\n            return { ...x, state: true };\n          }\n          return x;\n        }\n      } else {\n        return x;\n      }\n    });\n\n    set_runtimes(new_runtimes);\n  }\n\n  return (\n    <div>\n      <h2 className=\"heading\">\n        3: Select a Runtime Range (Up to {runtime_limit})\n      </h2>\n      <div className=\"runtime-button-container\">\n        {runtimes.map((element, index) => (\n          <label\n            key={index}\n            className={`runtime-button-${element.state ? \"on\" : \"off\"}`}\n          >\n            <input\n              className=\"runtime-button-checkbox\"\n              type=\"checkbox\"\n              onClick={() => {\n                handle_click(element.desc);\n              }}\n            />\n            <p className=\"runtime-button-text\">\n              {element.runtime}\n              <br />\n            </p>\n            <p className=\"runtime-button-desc-text\">{element.desc} Minutes</p>\n          </label>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default SelectRuntime;\n","/Users/jpl-st-spring2021/PycharmProjects/dev_chris/Application_SE02/front-end/src/select_age.js",["89"],[],"import { useState } from \"react\";\n\nfunction SelectAge({ element, set_element }) {\n  /* --- Variables --- */\n  const age_limit = 2; // Limit of how many age ratings the user can choose.\n  const [age_num, set_age_num] = useState(0); // Sets the current number of selected age ratings.\n  const [ages, set_ages] = useState([\n    // Descriptions of age ratings\n    {\n      age: \"G\",\n      desc: \"Recommended for Young Children\",\n      state: false,\n    },\n    {\n      age: \"PG\",\n      desc: \"Recommended for Children\",\n      state: false,\n    },\n    {\n      age: \"PG-13\",\n      desc: \"Recommended for Teens\",\n      state: false,\n    },\n    {\n      age: \"R\",\n      desc: \"Recommended for Adults\",\n      state: false,\n    },\n    {\n      age: \"NC-17\",\n      desc: \"Adults Only\",\n      state: false,\n    },\n  ]);\n\n  /* --- Functions --- */\n\n  // Handle onClick events for each button on the selection page.\n  function handle_click(age) {\n    // Add element from button clicked to global variable in 'selection_sequence.js'\n    function add_age(x) {\n      set_element((element) => [...element, x]);\n      set_age_num(age_num + 1);\n    }\n\n    // Remove element from global variable in 'selection_sequence.js'\n    function remove_age(x) {\n      set_element(\n        element.filter((age) => {\n          return age != x;\n        })\n      );\n      set_age_num(age_num - 1);\n    }\n\n    // Update the 'ages' list based on which button was clicked.\n    const new_ages = ages.map((x) => {\n      if (x.age === age) {\n        if (x.state) {\n          remove_age(age);\n          return { ...x, state: false };\n        } else {\n          if (age_num < age_limit) {\n            add_age(age);\n            return { ...x, state: true };\n          }\n          return x;\n        }\n      } else {\n        return x;\n      }\n    });\n\n    set_ages(new_ages);\n  }\n\n  /* --- Returned JSX object --- */\n  return (\n    <div>\n      <h2 className=\"heading\">4: Select an Age Range (Up to {age_limit})</h2>\n      <div className=\"age-button-container\">\n        {ages.map((element, index) => (\n          <label\n            key={index}\n            className={`age-button-${element.state ? \"on\" : \"off\"}`}\n          >\n            <input\n              className=\"age-button-checkbox\"\n              type=\"checkbox\"\n              onClick={() => {\n                handle_click(element.age);\n              }}\n            />\n            <p className=\"age-button-text\">\n              {element.age}\n              <br />\n            </p>\n            <p className=\"age-button-desc-text\">{element.desc}</p>\n          </label>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default SelectAge;\n","/Users/jpl-st-spring2021/PycharmProjects/dev_chris/Application_SE02/front-end/src/results.js",[],[],{"ruleId":"90","severity":1,"message":"91","line":61,"column":21,"nodeType":"92","messageId":"93","endLine":61,"endColumn":23},{"ruleId":"90","severity":1,"message":"91","line":71,"column":20,"nodeType":"92","messageId":"93","endLine":71,"endColumn":22},{"ruleId":"90","severity":1,"message":"91","line":81,"column":23,"nodeType":"92","messageId":"93","endLine":81,"endColumn":25},{"ruleId":"90","severity":1,"message":"91","line":91,"column":19,"nodeType":"92","messageId":"93","endLine":91,"endColumn":21},{"ruleId":"90","severity":1,"message":"91","line":61,"column":24,"nodeType":"92","messageId":"93","endLine":61,"endColumn":26},{"ruleId":"90","severity":1,"message":"91","line":38,"column":23,"nodeType":"92","messageId":"93","endLine":38,"endColumn":25},{"ruleId":"90","severity":1,"message":"91","line":43,"column":26,"nodeType":"92","messageId":"93","endLine":43,"endColumn":28},{"ruleId":"90","severity":1,"message":"91","line":50,"column":22,"nodeType":"92","messageId":"93","endLine":50,"endColumn":24},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected"]