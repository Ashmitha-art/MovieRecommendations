[{"/Users/jpl-st-spring2021/Desktop/NathanUnitTests01May/csc648-spring23-04-team02/Application_SE02/front-end/src/index.js":"1","/Users/jpl-st-spring2021/Desktop/NathanUnitTests01May/csc648-spring23-04-team02/Application_SE02/front-end/src/App.js":"2","/Users/jpl-st-spring2021/Desktop/NathanUnitTests01May/csc648-spring23-04-team02/Application_SE02/front-end/src/Member.js":"3","/Users/jpl-st-spring2021/Desktop/NathanUnitTests01May/csc648-spring23-04-team02/Application_SE02/front-end/src/Home.js":"4","/Users/jpl-st-spring2021/Desktop/NathanUnitTests01May/csc648-spring23-04-team02/Application_SE02/front-end/src/About.js":"5","/Users/jpl-st-spring2021/Desktop/NathanUnitTests01May/csc648-spring23-04-team02/Application_SE02/front-end/src/Navbar.js":"6","/Users/jpl-st-spring2021/Desktop/NathanUnitTests01May/csc648-spring23-04-team02/Application_SE02/front-end/src/recommend.js":"7","/Users/jpl-st-spring2021/Desktop/NathanUnitTests01May/csc648-spring23-04-team02/Application_SE02/front-end/src/my-list.js":"8","/Users/jpl-st-spring2021/Desktop/NathanUnitTests01May/csc648-spring23-04-team02/Application_SE02/front-end/src/Login.js":"9","/Users/jpl-st-spring2021/Desktop/NathanUnitTests01May/csc648-spring23-04-team02/Application_SE02/front-end/src/Signup.js":"10","/Users/jpl-st-spring2021/Desktop/NathanUnitTests01May/csc648-spring23-04-team02/Application_SE02/front-end/src/select_genre.js":"11","/Users/jpl-st-spring2021/Desktop/NathanUnitTests01May/csc648-spring23-04-team02/Application_SE02/front-end/src/select_year.js":"12","/Users/jpl-st-spring2021/Desktop/NathanUnitTests01May/csc648-spring23-04-team02/Application_SE02/front-end/src/select_runtime.js":"13","/Users/jpl-st-spring2021/Desktop/NathanUnitTests01May/csc648-spring23-04-team02/Application_SE02/front-end/src/results.js":"14","/Users/jpl-st-spring2021/Desktop/NathanUnitTests01May/csc648-spring23-04-team02/Application_SE02/front-end/src/select_age.js":"15"},{"size":254,"mtime":1682995535309,"results":"16","hashOfConfig":"17"},{"size":1687,"mtime":1682995535307,"results":"18","hashOfConfig":"17"},{"size":3785,"mtime":1682995535308,"results":"19","hashOfConfig":"17"},{"size":467,"mtime":1682995535307,"results":"20","hashOfConfig":"17"},{"size":4415,"mtime":1682995535306,"results":"21","hashOfConfig":"17"},{"size":1929,"mtime":1682995535308,"results":"22","hashOfConfig":"17"},{"size":3103,"mtime":1682995535776,"results":"23","hashOfConfig":"17"},{"size":2749,"mtime":1682995535310,"results":"24","hashOfConfig":"17"},{"size":3949,"mtime":1682995535307,"results":"25","hashOfConfig":"17"},{"size":6264,"mtime":1682995535308,"results":"26","hashOfConfig":"17"},{"size":2314,"mtime":1682995535777,"results":"27","hashOfConfig":"17"},{"size":2140,"mtime":1682995535778,"results":"28","hashOfConfig":"17"},{"size":2267,"mtime":1682995535777,"results":"29","hashOfConfig":"17"},{"size":958,"mtime":1682995535776,"results":"30","hashOfConfig":"17"},{"size":2640,"mtime":1682995535777,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"juls1n",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},"/Users/jpl-st-spring2021/Desktop/NathanUnitTests01May/csc648-spring23-04-team02/Application_SE02/front-end/src/index.js",[],[],"/Users/jpl-st-spring2021/Desktop/NathanUnitTests01May/csc648-spring23-04-team02/Application_SE02/front-end/src/App.js",[],[],"/Users/jpl-st-spring2021/Desktop/NathanUnitTests01May/csc648-spring23-04-team02/Application_SE02/front-end/src/Member.js",[],[],"/Users/jpl-st-spring2021/Desktop/NathanUnitTests01May/csc648-spring23-04-team02/Application_SE02/front-end/src/Home.js",[],[],"/Users/jpl-st-spring2021/Desktop/NathanUnitTests01May/csc648-spring23-04-team02/Application_SE02/front-end/src/About.js",[],[],"/Users/jpl-st-spring2021/Desktop/NathanUnitTests01May/csc648-spring23-04-team02/Application_SE02/front-end/src/Navbar.js",["85","86"],[],"import { useNavigate } from \"react-router-dom\";\n\nfunction Navbar() {\n  let navigate = useNavigate();\n\n  const routeChange = (route) => {\n    let path = \"/\" + route;\n    navigate(path);\n  };\n\n  const logout = () => {\n    fetch(\"api/logout/\", {\n      method: \"POST\",\n      headers: {\n        Authorization: `Token ${localStorage.getItem(\"token\")}`,\n        \"X-CSRFToken\": (document.cookie.match('(^|;)\\\\s*' + 'csrftoken' + '\\\\s*=\\\\s*([^;]+)')?.pop() || ''),\n      },\n    })\n      .then((res) => {\n        if (!res.ok) throw Error(\"Could not fetch data.\");\n        return res.json();\n      })\n      .catch((err) => {\n        console.log(err.message);\n      });\n  };\n\n  return (\n    <nav className=\"navbar\">\n      <button\n        onClick={() => {\n          routeChange(\"\");\n        }}\n        className=\"navbar-button\"\n      >\n        Home\n      </button>\n      {!localStorage.getItem(\"token\") && (\n        <button\n          onClick={() => {\n            routeChange(\"login\");\n            routeChange(\"/\");\n          }}\n          className=\"navbar-button\"\n        >\n          Login\n        </button>\n      )}\n      {localStorage.getItem(\"token\") && (\n        <button\n          onClick={() => {\n            logout();\n            localStorage.removeItem(\"token\");\n            window.location.reload();\n          }}\n          className=\"navbar-button\"\n        >\n          Logout\n        </button>\n      )}\n      <button\n        onClick={() => {\n          routeChange(\"signup\");\n        }}\n        className=\"navbar-button\"\n      >\n        Sign Up\n      </button>\n      <button\n        onClick={() => {\n          routeChange(\"my-list\");\n        }}\n        className=\"navbar-button\"\n      >\n        My List\n      </button>\n\n      <button\n        onClick={() => {\n          routeChange(\"about\");\n        }}\n        className=\"navbar-button\"\n        id=\"about\"\n      >\n        About\n      </button>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","/Users/jpl-st-spring2021/Desktop/NathanUnitTests01May/csc648-spring23-04-team02/Application_SE02/front-end/src/recommend.js",["87","88","89","90","91","92"],[],"import { useState } from \"react\";\nimport SelectGenre from \"./select_genre\";\nimport SelectYear from \"./select_year\";\nimport SelectRuntime from \"./select_runtime\";\nimport SelectAge from \"./select_age\";\nimport Results from \"./results\";\n\nfunction SelectionSequence() {\n  const [current, set_current] = useState(\"genre\");\n\n  const [genre, set_genre] = useState([]);\n  const [year, set_year] = useState([]);\n  const [runtime, set_runtime] = useState([]);\n  const [age, set_age] = useState([]);\n\n  const [results, set_results] = useState([]);\n  const [error, set_error] = useState(\"\");\n\n  const generate_results = () => {\n    const preferences = { genre, year, runtime, age };\n    console.log(preferences);\n\n    fetch(\"api/get_movie_recommendations/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${localStorage.getItem(\"token\")}`,\n        // Include the CSRF token in the headers\n        \"X-CSRFToken\":\n          document.cookie\n            .match(\"(^|;)\\\\s*\" + \"csrftoken\" + \"\\\\s*=\\\\s*([^;]+)\")\n            ?.pop() || \"\",\n      },\n      body: JSON.stringify(preferences),\n    })\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        set_results(data);\n      })\n      .catch((err) => {\n        console.log(err.message);\n        set_error(err);\n      });\n    set_current(\"results\");\n  };\n\n  return (\n    <div>\n      {/* Selection Pages */}\n      {current === \"genre\" && (\n        <SelectGenre element={genre} set_element={set_genre} />\n      )}\n      {current === \"year\" && (\n        <SelectYear element={year} set_element={set_year} />\n      )}\n      {current === \"runtime\" && (\n        <SelectRuntime element={runtime} set_element={set_runtime} />\n      )}\n      {current === \"age\" && <SelectAge element={age} set_element={set_age} />}\n\n      {current === \"results\" && <Results data={results} error={error} />}\n\n      {/* Next Buttons */}\n      {genre.length != 0 && current === \"genre\" && (\n        <button\n          className=\"next-button\"\n          onClick={() => {\n            set_current(\"year\");\n          }}\n        >\n          Next\n        </button>\n      )}\n      {year.length != 0 && current === \"year\" && (\n        <button\n          className=\"next-button\"\n          onClick={() => {\n            set_current(\"runtime\");\n          }}\n        >\n          Next\n        </button>\n      )}\n      {runtime.length != 0 && current === \"runtime\" && (\n        <button\n          className=\"next-button\"\n          onClick={() => {\n            set_current(\"age\");\n          }}\n        >\n          Next\n        </button>\n      )}\n      {age.length != 0 && current === \"age\" && (\n        <button\n          className=\"next-button\"\n          onClick={() => {\n            generate_results();\n          }}\n        >\n          Generate Recommendations\n        </button>\n      )}\n\n      {/* Testing... */}\n\n      <p className=\"test\">{genre}</p>\n      <p className=\"test\">{year}</p>\n      <p className=\"test\">{runtime}</p>\n      <p className=\"test\">{age}</p>\n    </div>\n  );\n}\n\nexport default SelectionSequence;\n","/Users/jpl-st-spring2021/Desktop/NathanUnitTests01May/csc648-spring23-04-team02/Application_SE02/front-end/src/my-list.js",[],[],"/Users/jpl-st-spring2021/Desktop/NathanUnitTests01May/csc648-spring23-04-team02/Application_SE02/front-end/src/Login.js",["93","94"],[],"import React, { Component } from \"react\";\nimport {Navigate} from \"react-router-dom\";\n\nclass LoginForm extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    InfoErrors: {},\n    isLoggedin: false,\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (true) {\n      let form_data = new FormData();\n      form_data.append(\"username\", this.state.username);\n      form_data.append(\"password\", this.state.password);\n\n      fetch(\"api/login/\", {\n        method: \"POST\",\n        body: form_data,\n        headers: {\n          // Include the CSRF token in the headers\n          \"X-CSRFToken\": (document.cookie.match('(^|;)\\\\s*' + 'csrftoken' + '\\\\s*=\\\\s*([^;]+)')?.pop() || ''),\n        },\n      })\n          .then((res) => {\n            if (!res.ok) throw Error(\"Could not fetch data.\");\n            return res.json();\n          })\n          .then((data) => {\n            localStorage.setItem(\"token\", data.token);\n            this.setState({isLoggedin: true});\n          })\n          .catch((err) => {\n            console.log(err.message);\n          });\n    }\n  };\n\n  LoginValidation = () => {\n    let InfoErrors = {};\n    let ValidCredentials = true;\n\n    if (!this.state.username.match(/^[A-Za-z][A-Za-z0-9]+$/)) {\n      ValidCredentials = false;\n      InfoErrors[\"username\"] =\n          \"Username must begin with an alphanumeric character.\";\n    } else {\n      if (!this.state.username.match(/^[A-Za-z]\\w{2,20}$/)) {\n        ValidCredentials = false;\n        InfoErrors[\"username\"] =\n            \"Username must contain at least 3 alphanumeric characters.\";\n      }\n    }\n\n    if (!this.state.password) {\n      ValidCredentials = false;\n      InfoErrors[\"password\"] = \"Please enter a valid password.\";\n    } else if (this.state.password) {\n      if (\n          !this.state.password.match(\n              /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$/\n          )\n      ) {\n        ValidCredentials = false;\n        InfoErrors[\"password\"] =\n            \"Password must be at least 8 characters and contain 1 letter, 1 number and a symbol.\";\n      }\n    }\n\n    this.setState({InfoErrors});\n    return ValidCredentials;\n  };\n\n  render() {\n    const {username, password, isLoggedin} = this.state;\n    if (isLoggedin) {\n      return <Navigate to=\"/\"/>\n    }\n\n      return (\n          <div className=\"Login_Main_Div\">\n            <h1 className=\"heading\">Login</h1>\n            <form name=\"Login_Form\" onSubmit={this.handleSubmit}>\n              <div className=\"Login_Container\">\n                <label className=\"Login_Username\">Username</label>\n                <input\n                    className=\"LoginRegisterInputFields\"\n                    type=\"text\"\n                    id=\"username\"\n                    placeholder=\"Username\"\n                    name=\"username\"\n                    value={username}\n                    onChange={this.handleChange}\n                />\n                <div className=\"ErrorMessage\">{this.state.InfoErrors.username}</div>\n\n                <label className=\"Login_Password\">Password</label>\n                <input\n                    className=\"LoginRegisterInputFields\"\n                    type=\"password\"\n                    id=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={password}\n                    onChange={this.handleChange}\n                />\n                <div className=\"ErrorMessage\">{this.state.InfoErrors.password}</div>\n                {/*\n            <a className=\"Forgot_Password\" href=\"/\">\n              Forgot Password?\n            </a>\n            */}\n                <button onClick={this.handleSubmit} className=\"Login_Button\" value=\"Log In\">Log In</button>\n              </div>\n            </form>\n          </div>\n      );\n    }\n  }\nexport default LoginForm;\n","/Users/jpl-st-spring2021/Desktop/NathanUnitTests01May/csc648-spring23-04-team02/Application_SE02/front-end/src/Signup.js",["95","96","97"],[],"import React, { Component } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\nimport { Navigate } from \"react-router-dom\";\n\nclass SignUpForm extends Component {\n  state = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmpassword: \"\",\n    InfoErrors: {},\n    isLoggedin: false,\n  };\n\n  //EEj23`~ull1\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  // Post Request\n  handleSubmit = (event) => {\n    // let navigate = useNavigate();\n    event.preventDefault();\n    if (this.SignupValidation()) {\n      // Fix later.\n      let form_data = new FormData();\n\n      form_data.append(\"email\", this.state.email);\n      form_data.append(\"username\", this.state.username);\n      form_data.append(\"password\", this.state.password);\n\n      fetch(\"api/register/\", {\n        method: \"POST\",\n        body: form_data,\n        headers: {\n          // Include the CSRF token in the headers\n          \"X-CSRFToken\":\n            document.cookie\n              .match(\"(^|;)\\\\s*\" + \"csrftoken\" + \"\\\\s*=\\\\s*([^;]+)\")\n              ?.pop() || \"\",\n        },\n      })\n        .then((res) => {\n          if (!res.ok) throw Error(\"Could not fetch data.\");\n          return res.json();\n        })\n        .then((data) => {\n          localStorage.setItem(\"token\", data.token);\n          this.setState({ isLoggedin: true });\n          // navigate(\"/\");\n        })\n        .catch((err) => {\n          console.log(err.message);\n        });\n    }\n  };\n\n  SignupValidation = () => {\n    let InfoErrors = {};\n    let ValidAccountInfo = true;\n\n    if (!this.state.email) {\n      ValidAccountInfo = false;\n      InfoErrors[\"email\"] = \"Please enter a valid email.\";\n    } else if (this.state.email) {\n      if (\n        !this.state.email.match(/^\\w+([-]?\\w+)*@\\w+([-]?\\w+)*(\\.\\w{2,3})+$/)\n      ) {\n        ValidAccountInfo = false;\n        InfoErrors[\"email\"] = \"Email is not valid (must be ex. x@y.com).\";\n      }\n    }\n\n    if (!this.state.username) {\n      ValidAccountInfo = false;\n      InfoErrors[\"username\"] = \"Please enter a valid username.\";\n    } else if (this.state.username) {\n      if (!this.state.username.match(/^[A-Za-z][A-Za-z0-9]+$/)) {\n        ValidAccountInfo = false;\n        InfoErrors[\"username\"] =\n          \"Username must begin with an alphanumeric character.\";\n      } else {\n        if (!this.state.username.match(/^[A-Za-z]\\w{2,20}$/)) {\n          ValidAccountInfo = false;\n          InfoErrors[\"username\"] =\n            \"Username must contain at least 3 alphanumeric characters.\";\n        }\n      }\n    }\n\n    if (!this.state.password) {\n      ValidAccountInfo = false;\n      InfoErrors[\"password\"] = \"Please enter a valid password.\";\n    } else if (this.state.password) {\n      if (\n        !this.state.password.match(\n          /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,}$/\n        )\n      ) {\n        ValidAccountInfo = false;\n        InfoErrors[\"password\"] =\n          \"Password must be at least 8 characters and contain 1 letter, 1 number, and a symbol.\";\n      }\n    }\n\n    if (!this.state.confirmpassword) {\n      ValidAccountInfo = false;\n      InfoErrors[\"confirmpassword\"] = \"Please confirm your password.\";\n    } else if (this.state.confirmpassword) {\n      if (this.state.confirmpassword !== this.state.password) {\n        ValidAccountInfo = false;\n        InfoErrors[\"confirmpassword\"] = \"Passwords do not match.\";\n      }\n    }\n\n    this.setState({ InfoErrors });\n    return ValidAccountInfo;\n  };\n\n  render() {\n    const { username, email, password, confirmpassword, isLoggedin } =\n      this.state;\n    if (isLoggedin) {\n      //return <Navigate to=\"/\" />;\n    }\n\n    return (\n      <div className=\"SignUp_Main_Div\">\n        <h1 className=\"heading\">Register</h1>\n        <form name=\"Signup_Form\">\n          <div className=\"SignUp_Container\">\n            <label className=\"SignUp_Email\">Email</label>\n            <input\n              className=\"LoginRegisterInputFields\"\n              data-testid=\"email\"\n              type=\"email\"\n              id=\"email\"\n              placeholder=\"Email\"\n              required\n              name=\"email\"\n              value={email}\n              onChange={this.handleChange}\n            />\n            <div className=\"ErrorMessage\">{this.state.InfoErrors.email}</div>\n            <br />\n\n            <label className=\"SignUp_Username\">Username</label>\n            <input\n              className=\"LoginRegisterInputFields\"\n              data-testid=\"username\"\n              type=\"text\"\n              id=\"Username\"\n              placeholder=\"Username\"\n              required\n              name=\"username\"\n              value={username}\n              onChange={this.handleChange}\n            />\n            <div className=\"ErrorMessage\">{this.state.InfoErrors.username}</div>\n            <br />\n\n            <label className=\"SignUp_Password\">Password</label>\n            <input\n              className=\"LoginRegisterInputFields\"\n              data-testid=\"confirmpassword\"\n              type=\"password\"\n              id=\"Password\"\n              placeholder=\"Password\"\n              required\n              name=\"password\"\n              value={password}\n              onChange={this.handleChange}\n            />\n            <div className=\"ErrorMessage\">{this.state.InfoErrors.password}</div>\n            <br />\n\n            <label className=\"SignUp_ConfirmPassword\">Confirm Password</label>\n            <input\n              className=\"LoginRegisterInputFields\"\n              data-testid=\"password\"\n              type=\"password\"\n              id=\"ConfirmPassword\"\n              placeholder=\"Confirm Password\"\n              required\n              name=\"confirmpassword\"\n              value={confirmpassword}\n              onChange={this.handleChange}\n            />\n            <div className=\"ErrorMessage\">\n              {this.state.InfoErrors.confirmpassword}\n            </div>\n            <br />\n            <button\n              onClick={this.handleSubmit}\n              data-testid=\"submit\"\n              className=\"SignUp_Button\"\n              value=\"Sign up\"\n            >\n              Sign up\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SignUpForm;\n","/Users/jpl-st-spring2021/Desktop/NathanUnitTests01May/csc648-spring23-04-team02/Application_SE02/front-end/src/select_genre.js",["98"],[],"import { useState } from \"react\";\n\nfunction SelectGenre({ element, set_element }) {\n  const genre_limit = 3;\n  const [genre_num, set_genre_num] = useState(0);\n  const [genres, set_genres] = useState([\n    {\n      genre: \"Action\",\n      state: false,\n    },\n    {\n      genre: \"Adventure\",\n      state: false,\n    },\n    {\n      genre: \"Comedy\",\n      state: false,\n    },\n    {\n      genre: \"Drama\",\n      state: false,\n    },\n    {\n      genre: \"Horror\",\n      state: false,\n    },\n    {\n      genre: \"Thriller\",\n      state: false,\n    },\n    {\n      genre: \"Mystery\",\n      state: false,\n    },\n    {\n      genre: \"Crime\",\n      state: false,\n    },\n    {\n      genre: \"Animation\",\n      state: false,\n    },\n    {\n      genre: \"Sci-Fi\",\n      state: false,\n    },\n    {\n      genre: \"Fantasy\",\n      state: false,\n    },\n    {\n      genre: \"Romance\",\n      state: false,\n    },\n  ]);\n\n  function handle_click(genre) {\n    function remove_genre(x) {\n      set_element(\n        element.filter((genre) => {\n          return genre != x;\n        })\n      );\n      set_genre_num(genre_num - 1);\n    }\n\n    function add_genre(x) {\n      set_element((element) => [...element, x]);\n      set_genre_num(genre_num + 1);\n    }\n\n    const new_genres = genres.map((x) => {\n      if (x.genre === genre) {\n        if (x.state) {\n          remove_genre(genre);\n          return { ...x, state: false };\n        } else {\n          if (genre_num < genre_limit) {\n            add_genre(genre);\n            return { ...x, state: true };\n          }\n          return x;\n        }\n      } else {\n        return x;\n      }\n    });\n\n    set_genres(new_genres);\n  }\n\n  return (\n    <div>\n      <h2 className=\"heading\">1: Select a Genre (Up to {genre_limit})</h2>\n      <div className=\"genre-button-container\">\n        {genres.map((element, index) => (\n          <label\n            key={index}\n            className={`genre-button-${element.state ? \"on\" : \"off\"}`}\n          >\n            <input\n              className=\"genre-button-checkbox\"\n              type=\"checkbox\"\n              onClick={() => {\n                handle_click(element.genre);\n              }}\n            />\n            <p className=\"genre-button-text\">{element.genre}</p>\n          </label>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default SelectGenre;\n","/Users/jpl-st-spring2021/Desktop/NathanUnitTests01May/csc648-spring23-04-team02/Application_SE02/front-end/src/select_year.js",["99"],[],"import { useState } from \"react\";\n\nfunction SelectYear({ element, set_element }) {\n  const year_limit = 2;\n  const [year_num, set_year_num] = useState(0);\n  const [years, set_years] = useState([\n    {\n      year: \"Prehistoric\",\n      desc: \"1920 to 1940\",\n      state: false,\n    },\n    {\n      year: \"Vintage\",\n      desc: \"1940 to 1960\",\n      state: false,\n    },\n    {\n      year: \"Classic\",\n      desc: \"1960 to 1980\",\n      state: false,\n    },\n    {\n      year: \"Retro\",\n      desc: \"1980 to 2000\",\n      state: false,\n    },\n    {\n      year: \"Recent\",\n      desc: \"2000 to 2020\",\n      state: false,\n    },\n  ]);\n\n  function handle_click(year) {\n    function remove_year(x) {\n      set_element(\n        element.filter((year) => {\n          return year != x;\n        })\n      );\n      set_year_num(year_num - 1);\n    }\n\n    function add_year(x) {\n      set_element((element) => [...element, x]);\n      set_year_num(year_num + 1);\n    }\n\n    const new_years = years.map((x) => {\n      if (x.desc === year) {\n        if (x.state) {\n          remove_year(year);\n          return { ...x, state: false };\n        } else {\n          if (year_num < year_limit) {\n            add_year(year);\n            return { ...x, state: true };\n          }\n          return x;\n        }\n      } else {\n        return x;\n      }\n    });\n\n    set_years(new_years);\n  }\n\n  return (\n    <div>\n      <h2 className=\"heading\">2: Select a Year Range (Up to {year_limit})</h2>\n      <div className=\"year-button-container\">\n        {years.map((element, index) => (\n          <label\n            key={index}\n            className={`year-button-${element.state ? \"on\" : \"off\"}`}\n          >\n            <input\n              className=\"year-button-checkbox\"\n              type=\"checkbox\"\n              onClick={() => {\n                handle_click(element.desc);\n              }}\n            />\n            <p className=\"year-button-text\">\n              {element.year}\n              <br />\n            </p>\n            <p className=\"year-button-desc-text\">{element.desc}</p>\n          </label>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default SelectYear;\n","/Users/jpl-st-spring2021/Desktop/NathanUnitTests01May/csc648-spring23-04-team02/Application_SE02/front-end/src/select_runtime.js",["100"],[],"import { useState } from \"react\";\n\nfunction SelectRuntime({ element, set_element }) {\n  const runtime_limit = 2;\n  const [runtime_num, set_runtime_num] = useState(0);\n  const [runtimes, set_runtimes] = useState([\n    {\n      runtime: \"Short\",\n      desc: \"Under 90\",\n      state: false,\n    },\n    {\n      runtime: \"Reasonable\",\n      desc: \"90 to 120\",\n      state: false,\n    },\n    {\n      runtime: \"Long\",\n      desc: \"120 to 150\",\n      state: false,\n    },\n    {\n      runtime: \"Epic\",\n      desc: \"150 to 180\",\n      state: false,\n    },\n    {\n      runtime: \"Eternity\",\n      desc: \"Over 180\",\n      state: false,\n    },\n  ]);\n\n  function handle_click(runtime) {\n    function add_runtime(x) {\n      set_element((element) => [...element, x]);\n      set_runtime_num(runtime_num + 1);\n    }\n\n    function remove_runtime(x) {\n      set_element(\n        element.filter((runtime) => {\n          return runtime != x;\n        })\n      );\n      set_runtime_num(runtime_num - 1);\n    }\n\n    const new_runtimes = runtimes.map((x) => {\n      if (x.desc === runtime) {\n        if (x.state) {\n          remove_runtime(runtime);\n          return { ...x, state: false };\n        } else {\n          if (runtime_num < runtime_limit) {\n            add_runtime(runtime);\n            return { ...x, state: true };\n          }\n          return x;\n        }\n      } else {\n        return x;\n      }\n    });\n\n    set_runtimes(new_runtimes);\n  }\n\n  return (\n    <div>\n      <h2 className=\"heading\">\n        3: Select a Runtime Range (Up to {runtime_limit})\n      </h2>\n      <div className=\"runtime-button-container\">\n        {runtimes.map((element, index) => (\n          <label\n            key={index}\n            className={`runtime-button-${element.state ? \"on\" : \"off\"}`}\n          >\n            <input\n              className=\"runtime-button-checkbox\"\n              type=\"checkbox\"\n              onClick={() => {\n                handle_click(element.desc);\n              }}\n            />\n            <p className=\"runtime-button-text\">\n              {element.runtime}\n              <br />\n            </p>\n            <p className=\"runtime-button-desc-text\">{element.desc} Minutes</p>\n          </label>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default SelectRuntime;\n","/Users/jpl-st-spring2021/Desktop/NathanUnitTests01May/csc648-spring23-04-team02/Application_SE02/front-end/src/results.js",[],[],"/Users/jpl-st-spring2021/Desktop/NathanUnitTests01May/csc648-spring23-04-team02/Application_SE02/front-end/src/select_age.js",["101"],[],"import { useState } from \"react\";\n\nfunction SelectAge({ element, set_element }) {\n  /* --- Variables --- */\n  const age_limit = 2; // Limit of how many age ratings the user can choose.\n  const [age_num, set_age_num] = useState(0); // Sets the current number of selected age ratings.\n  const [ages, set_ages] = useState([\n    // Descriptions of age ratings\n    {\n      age: \"G\",\n      desc: \"Recommended for Young Children\",\n      state: false,\n    },\n    {\n      age: \"PG\",\n      desc: \"Recommended for Children\",\n      state: false,\n    },\n    {\n      age: \"PG-13\",\n      desc: \"Recommended for Teens\",\n      state: false,\n    },\n    {\n      age: \"R\",\n      desc: \"Recommended for Adults\",\n      state: false,\n    },\n    {\n      age: \"NC-17\",\n      desc: \"Adults Only\",\n      state: false,\n    },\n  ]);\n\n  /* --- Functions --- */\n\n  // Handle onClick events for each button on the selection page.\n  function handle_click(age) {\n    // Add element from button clicked to global variable in 'selection_sequence.js'\n    function add_age(x) {\n      set_element((element) => [...element, x]);\n      set_age_num(age_num + 1);\n    }\n\n    // Remove element from global variable in 'selection_sequence.js'\n    function remove_age(x) {\n      set_element(\n        element.filter((age) => {\n          return age != x;\n        })\n      );\n      set_age_num(age_num - 1);\n    }\n\n    // Update the 'ages' list based on which button was clicked.\n    const new_ages = ages.map((x) => {\n      if (x.age === age) {\n        if (x.state) {\n          remove_age(age);\n          return { ...x, state: false };\n        } else {\n          if (age_num < age_limit) {\n            add_age(age);\n            return { ...x, state: true };\n          }\n          return x;\n        }\n      } else {\n        return x;\n      }\n    });\n\n    set_ages(new_ages);\n  }\n\n  /* --- Returned JSX object --- */\n  return (\n    <div>\n      <h2 className=\"heading\">4: Select an Age Range (Up to {age_limit})</h2>\n      <div className=\"age-button-container\">\n        {ages.map((element, index) => (\n          <label\n            key={index}\n            className={`age-button-${element.state ? \"on\" : \"off\"}`}\n          >\n            <input\n              className=\"age-button-checkbox\"\n              type=\"checkbox\"\n              onClick={() => {\n                handle_click(element.age);\n              }}\n            />\n            <p className=\"age-button-text\">\n              {element.age}\n              <br />\n            </p>\n            <p className=\"age-button-desc-text\">{element.desc}</p>\n          </label>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default SelectAge;\n",{"ruleId":"102","severity":1,"message":"103","line":16,"column":59,"nodeType":"104","messageId":"105","endLine":16,"endColumn":60},{"ruleId":"102","severity":1,"message":"103","line":16,"column":73,"nodeType":"104","messageId":"105","endLine":16,"endColumn":74},{"ruleId":"102","severity":1,"message":"103","line":31,"column":32,"nodeType":"104","messageId":"105","endLine":31,"endColumn":33},{"ruleId":"102","severity":1,"message":"103","line":31,"column":46,"nodeType":"104","messageId":"105","endLine":31,"endColumn":47},{"ruleId":"106","severity":1,"message":"107","line":66,"column":21,"nodeType":"104","messageId":"108","endLine":66,"endColumn":23},{"ruleId":"106","severity":1,"message":"107","line":76,"column":20,"nodeType":"104","messageId":"108","endLine":76,"endColumn":22},{"ruleId":"106","severity":1,"message":"107","line":86,"column":23,"nodeType":"104","messageId":"108","endLine":86,"endColumn":25},{"ruleId":"106","severity":1,"message":"107","line":96,"column":19,"nodeType":"104","messageId":"108","endLine":96,"endColumn":21},{"ruleId":"102","severity":1,"message":"103","line":30,"column":61,"nodeType":"104","messageId":"105","endLine":30,"endColumn":62},{"ruleId":"102","severity":1,"message":"103","line":30,"column":75,"nodeType":"104","messageId":"105","endLine":30,"endColumn":76},{"ruleId":"109","severity":1,"message":"110","line":3,"column":10,"nodeType":"111","messageId":"112","endLine":3,"endColumn":18},{"ruleId":"102","severity":1,"message":"103","line":42,"column":34,"nodeType":"104","messageId":"105","endLine":42,"endColumn":35},{"ruleId":"102","severity":1,"message":"103","line":42,"column":48,"nodeType":"104","messageId":"105","endLine":42,"endColumn":49},{"ruleId":"106","severity":1,"message":"107","line":61,"column":24,"nodeType":"104","messageId":"108","endLine":61,"endColumn":26},{"ruleId":"106","severity":1,"message":"107","line":38,"column":23,"nodeType":"104","messageId":"108","endLine":38,"endColumn":25},{"ruleId":"106","severity":1,"message":"107","line":43,"column":26,"nodeType":"104","messageId":"108","endLine":43,"endColumn":28},{"ruleId":"106","severity":1,"message":"107","line":50,"column":22,"nodeType":"104","messageId":"108","endLine":50,"endColumn":24},"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","eqeqeq","Expected '!==' and instead saw '!='.","unexpected","no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar"]